1 START S
# Sentence
1 S   AL

# AL = Action List
1 AL   AP AL
1 AL   AP
1 AL   AP and AL

# AP = Action Phrase
1 AP   OrderedCommand
1 AP   SoundCommand
1 AP   ConditionalCommand
1 AP   EventHandler
1 AP   DataCommand
1 AP   LoopCommand
1 AP   OperatorCommand
1 AP   TimerCommand

# Sequence
1 OrderedCommand   OrderAdverb AL

# Operators

# NP = Number Phrase
1 Unk	NP
1 NP	NPP
1 NP	Det NPP
1 NP 	VARIABLE_NAME

#1 NP   add Unk to Unk
1 NP   	Unk plus Unk
1 NP   Unk added to Unk
1 NPP   sum of Unk and Unk

#1 NP   subtract Unk from Unk
1 NP   Unk minus Unk
1 NP   Unk subtracted by Unk

#1 NP   multiply Unk by Unk
1 NP  	Unk times Unk
1 NP	Unk multiplied by Unk
1 NPP 	product of Unk and Unk


1 NP   Unk divided by Unk
#1 NP   divide Unk by Unk

1 NPP   random number between Unk and Unk
1 NP   negative NP


# BP = Boolean Phrase
1 BP   item Unk in Lis LIST_NAME
1 BP   item Unk MOD in Lis LIST_NAME

1 BP   VARIABLE_NAME CBP Unk
1 BP   VARIABLE_NAME MOD CBP Unk
1 BP   Unk CBP Unk
1 BP   VARIABLE_NAME CBP VARIABLE_NAME
1 BP   Tim CBP Unk

1 BP   LIST_NAME contains ITEM
1 BP   Boolean

1 Boolean   true
1 Boolean   false
1 Boolean   LMOD true
1 Boolean   LMOD false

1 BP   BP and BP
1 BP   BP or BP

1 CBP   equal to
1 CBP   greater than
1 CBP   less than
1 CBP   greater than or equal to
1 CBP   less than or equal to
1 CBP   LMOD CBP

1 NEG	 is not
1 NEG	 isnâ€™t
1 NEG	 not
1 POS 	 is

1 LMOD POS
1 LMOD NEG

1 SoundCommand   play the NAME_OF_SOUND sound
1 SoundCommand   set volume to Unk
1 SoundCommand   change volume by Unk
1 SoundCommand   change pitch effect by Unk
1 SoundCommand   softer
1 SoundCommand   louder
1 SoundCommand   slower
1 SoundCommand   faster
1 SoundCommand   stop all sounds

# Control
1 ConditionalCommand   if BP then AL that's it
1 ConditionalCommand   if BP then AL that's it otherwise AL that's it
1 ConditionalCommand   if BP then AL that's it else AL that's it

1 ControlCommand   wait NUMBER seconds
1 ControlCommand   wait until BP
1 ControlCommand   repeat AL until BP
1 ControlCommand   repeat AL forever
1 ControlCommand   repeat AL Unk times
1 ControlCommand   delete this clone
1 ControlCommand   create a clone of myself

# Loops
1 LoopCommand   repeat LoopCommandP
1 LoopCommand   LoopCommandP
1 LoopCommand   AL That should be repeated Duration
1 LoopCommand   AL Repeat that Duration

1 LoopCommandP   AP Duration
1 LoopCommandP   the following Duration AL that's it
1 LoopCommandP   the following steps Duration AL that's it

# Duration
1 Duration   forever
1 Duration   Unk times

# Sequences
# TODO(quacht): fill this out more
1 OrderAdverb    first
1 OrderAdverb    second
1 OrderAdverb    third
1 OrderAdverb    firstly
1 OrderAdverb    secondly
1 OrderAdverb    thirdly
1 OrderAdverb    then
1 OrderAdverb    after
1 OrderAdverb    finally

1 EventCommand   broadcast MESSAGE_NAME
1 EventCommand   broadcast MESSAGE_NAME and wait
1 EventCommand   a new message called MESSAGE_NAME
1 SimpleEventHandler   EVENT AL
1 EventHandler   SimpleEventHandler
1 EventHandler   SimpleEventHandler at the same time
1 EventHandler   SimpleEventHandler too
1 EventHandler   SimpleEventHandler simultaneously
1 EventHandler   SimpleEventHandler at the same time too

1 EVENT   when the green flag is clicked
1 EVENT   when the program starts
1 EVENT   when KEY_NAME key is pressed
1 EVENT   when this sprite clicked
1 EVENT   when backdrop switches to BACKDROP_NAME
1 EVENT   when Tim CBP Unk
1 EVENT   when backdrop switches to the
1 EVENT   when I receive MESSAGE_NAME

1 Tim	timer
1 Tim	Det timer

1 DataCommand   make Var VARIABLE_LIST
1 DataCommand   delete Var VARIABLE_NAME


1 DataCommand   set VARIABLE_NAME to Unk
1 DataCommand   set VARIABLE_NAME to BP
1 DataCommand   change VARIABLE_NAME by Unk

1 DataCommand  add Unk to VARIABLE_NAME
1 DataCommand  increment VARIABLE_NAME by Unk
1 DataCommand  add VARIABLE_NAME to VARIABLE_NAME
1 DataCommand  subtract Unk from VARIABLE_NAME
1 DataCommand  decrement VARIABLE_NAME by Unk
1 DataCommand  subtract VARIABLE_NAME from VARIABLE_NAME
1 DataCommand  multiply VARIABLE_NAME by Unk
1 DataCommand  multiply VARIABLE_NAME by VARIABLE_NAME
1 DataCommand  divide VARIABLE_NAME by Unk
1 DataCommand  divide VARIABLE_NAME by VARIABLE_NAME

1 DataCommand   make Lis called LIST_NAME for a single sprite
1 DataCommand   make Lis called LIST_NAME for all the sprites
1 DataCommand   add ITEM to Lis LIST_NAME
1 DataCommand   delete element Unk of Lis LIST_NAME
1 DataCommand   replace element Unk of Lis LIST_NAME with ITEM
# The type depends on what's inside the list
1 DataReporter   the first item in Lis LIST_NAME

1 VARIABLE_LIST   VARIABLE_NAME
1 VARIABLE_LIST   VARIABLE_NAME and VARIABLE_LIST
1 VARIABLE_NAME   Var VARIABLE_NAME


1 TimerCommand   reset Tim

1 Det the
1 Det a

1 Var	variable
1 Var 	variable called
1 Var 	Det variable
1 Var 	Det variable called
1 Lis	list
1 Lis	Det Lis

