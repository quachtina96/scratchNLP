1 START S
# Sentence 
1 S   AL

# AL = Action List
1 AL   AP AL
1 AL   AP
1 AL   AP and AL

# AP = Action Phrase
1 AP   OrderedCommand
1 AP   SoundCommand
1 AP   ConditionalCommand
1 AP   EventCommand
1 AP   DataCommand
1 AP   LoopCommand
1 AP   OperatorCommand
1 AP   TimerCommand

# Sequence
1 OrderedCommand   OrderAdverb AP

# Operators

# NP = Number Phrase
1 NP   add NP to NP
1 NP   NP plus NP
1 NP   the sum of NP and NP
1 NP   NP added to NP

1 NP   subtract NP from NP
1 NP   NP minus NP 
1 NP   NP subtracted by NP

1 NP   multiply NP by NP
1 NP   NP times NP
1 NP	NP multiplied by NP
1 NP 	the product of NP and NP


1 NP   NP divided by NP 
1 NP   divide NP by NP 

1 NP   a random number between NP and NP
1 NP   NUMBER
1 NP   negative NUMBER


# BP = Boolean Phrase
1 BP   item NP in list LIST_NAME
1 BP   item NP MOD in list LIST_NAME

1 BP   if VARIABLE_NAME BPP NP 
1 BP   if VARIABLE_NAME MOD BPP NP 
1 BP   if NP BPP NP 
1 BP   if VARIABLE_NAME BPP VARIABLE_NAME

1 BP   LIST_NAME contains ITEM
1 BP   Boolean

1 Boolean   true
1 Boolean   false
1 Boolean   MOD true
1 Boolean   MOD false

1 BP   BP and BP
1 BP   BP or BP

1 BPP   equal to 
1 BPP   greater than
1 BPP   less than
1 BPP   greater than or equal to 
1 BPP   less than or equal to
1 BPP   MOD BPP 

1 NEG	 is not
1 NEG	 isnâ€™t
1 NEG	 not
1 POS 	 is 

1 MOD POS
1 MOD NEG

1 SoundCommand   play the NAME_OF_SOUND sound
1 SoundCommand   set volume to NP
1 SoundCommand   change volume by NP
1 SoundCommand   change pitch effect by NP
1 SoundCommand   softer
1 SoundCommand   louder
1 SoundCommand   slower
1 SoundCommand   faster
1 SoundCommand   stop all sounds

# Control
1 ConditionalCommand   if BP then AL that's it
1 ConditionalCommand   if BP then AL that's it otherwise AL that's it
1 ConditionalCommand   if BP then AL that's it else AL that's it

1 ControlCommand   wait NUMBER seconds
1 ControlCommand   wait until BP
1 ControlCommand   repeat AL until BP
1 ControlCommand   repeat AL forever
1 ControlCommand   repeat AL NP times
1 ControlCommand   delete this clone
1 ControlCommand   create a clone of myself

# Loops
1 LoopCommand   repeat LoopCommandP
1 LoopCommand   LoopCommandP
1 LoopCommand   AL That should be repeated Duration
1 LoopCommand   AL Repeat that Duration

1 LoopCommandP   AP Duration
1 LoopCommandP   the following Duration AL that's it
1 LoopCommandP   the following steps Duration AL that's it

# Duration
1 Duration   forever
1 Duration   NP times

# Sequences
# TODO(quacht): fill this out more
1 OrderAdverb    first 
1 OrderAdverb    second
1 OrderAdverb    third
1 OrderAdverb    firstly
1 OrderAdverb    secondly
1 OrderAdverb    thirdly
1 OrderAdverb    then
1 OrderAdverb    after
1 OrderAdverb    finally

1 EventCommand   broadcast MESSAGE_NAME
1 EventCommand   broadcast MESSAGE_NAME and wait
1 EventCommand   create a new message called MESSAGE_NAME
1 SimpleEventHandler   when EVENT AL
1 EventHandler   SimpleEventHandler
1 EventHandler   SimpleEventHandler at the same time
1 EventHandler   SimpleEventHandler too
1 EventHandler   SimpleEventHandler simultaneously
1 EventHandler   SimpleEventHandler at the same time too

1 EVENT   when the green flag is clicked
1 EVENT   when the program starts
1 EVENT   when the KEY_NAME key is pressed
1 EVENT   when this sprite clicked
1 EVENT   when backdrop switches to BACKDROP_NAME
1 EVENT   when the timer is greater than NP
1 EVENT   when backdrop switches to the NP
1 EVENT   when I receive MESSAGE_NAME 


1 DataCommand   make a variable VARIABLE_LIST
1 DataCommand   delete variable VARIABLE_NAME


1 DataCommand   set VARIABLE_NAME to NP
1 DataCommand   change VARIABLE_NAME by NP

1 DataCommand  add NP to VARIABLE_NAME
1 DataCommand  increment VARIABLE_NAME by NP
1 DataCommand  add VARIABLE_NAME to VARIABLE_NAME
1 DataCommand  subtract NP from VARIABLE_NAME
1 DataCommand  decrement VARIABLE_NAME by NP
1 DataCommand  subtract VARIABLE_NAME from VARIABLE_NAME
1 DataCommand  multiply VARIABLE_NAME by NP
1 DataCommand  multiply VARIABLE_NAME by VARIABLE_NAME
1 DataCommand  divide VARIABLE_NAME by NP
1 DataCommand  divide VARIABLE_NAME by VARIABLE_NAME

1 DataCommand   make a list called LIST_NAME for a single sprite
1 DataCommand   make a list called LIST_NAME for all the sprites
1 DataCommand   add ITEM to list LIST_NAME
1 DataCommand   delete element NP of list LIST_NAME
1 DataCommand   replace element NP of list LIST_NAME with ITEM
# The type depends on whatPs inside the list
1 DataReporter   the first item in list LIST_NAME

1 VARIABLE_LIST   VARIABLE_NAME
1 VARIABLE_LIST   VARIABLE_NAME and VARIABLE_NAME
1 VARIABLE_NAME   called VARIABLE_NAME

1 TimerCommand   Reset the timer


# Vocab

1 VARIABLE_NAME    x
1 VARIABLE_NAME    z
1 VARIABLE_NAME    y
1 KEY_NAME    space
1 KEY_NAME    left arrow
1 KEY_NAME    right arrow
1 KEY_NAME    down arrow
1 KEY_NAME    up arrow
1 KEY_NAME    any
1 KEY_NAME    a
1 KEY_NAME    b
 1 KEY_NAME    c
 1 KEY_NAME    d
 1 KEY_NAME    e
 1 KEY_NAME    f
 1 KEY_NAME    g
 1 KEY_NAME    h
 1 KEY_NAME    i
 1 KEY_NAME    j
 1 KEY_NAME    k
 1 KEY_NAME    l
 1 KEY_NAME    m
 1 KEY_NAME    n
 1 KEY_NAME    o
 1 KEY_NAME    p
 1 KEY_NAME    q
 1 KEY_NAME    r
 1 KEY_NAME    s
 1 KEY_NAME    t
 1 KEY_NAME    u
 1 KEY_NAME    v
 1 KEY_NAME    w
 1 KEY_NAME    x
 1 KEY_NAME    y
 1 KEY_NAME    z
 1 KEY_NAME    0
 1 KEY_NAME    1
 1 KEY_NAME    2
 1 KEY_NAME    3
 1 KEY_NAME    4
 1 KEY_NAME    5
 1 KEY_NAME    6
 1 KEY_NAME    7
 1 KEY_NAME    8
 1 KEY_NAME    9

1 LIST_NAME    name
1 NAME_OF_SOUND    sound of music
1 BACKDROP_NAME    Party
1 BACKDROP_NAME    Basketball
1 BACKDROP_NAME    Blue Sky
1 BACKDROP_NAME    Blue Sky 2
1 BACKDROP_NAME    Jurassic
1 BACKDROP_NAME    Light
1 BACKDROP_NAME    Rays
1 BACKDROP_NAME    Refrigerator
1 BACKDROP_NAME    Space

1 NUMBER     1
1 NUMBER     2
1 NUMBER     3
1 NUMBER     4
1 NUMBER     5
1 NUMBER     6
1 NUMBER     10
1 NUMBER     20


1 NUMBER     one
1 NUMBER     two
1 NUMBER     three
1 NUMBER     four
1 NUMBER     five
1 NUMBER     six
1 NUMBER     ten 
1 NUMBER     twenty

1 NAME_OF_SOUND bang

